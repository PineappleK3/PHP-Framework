<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Messenger/MessageSendError.proto

namespace MessageSendError;

use UnexpectedValueException;

/**
 * Protobuf type <code>MessageSendError.ErrorType</code>
 */
class ErrorType
{
    /**
     * Generated from protobuf enum <code>NicknameInvalid = 0;</code>
     */
    const NicknameInvalid = 0;
    /**
     * Generated from protobuf enum <code>Other = 1;</code>
     */
    const Other = 1;

    private static $valueToName = [
        self::NicknameInvalid => 'NicknameInvalid',
        self::Other => 'Other',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ErrorType::class, \MessageSendError_ErrorType::class);

