<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: registration/ErrorType.proto

namespace Registration;

use UnexpectedValueException;

/**
 * Protobuf type <code>registration.ErrorType</code>
 */
class ErrorType
{
    /**
     * Generated from protobuf enum <code>ALREADY_EXISTS = 0;</code>
     */
    const ALREADY_EXISTS = 0;
    /**
     * Generated from protobuf enum <code>BRUTE_FORCE_PW_ATTEMPT = 1;</code>
     */
    const BRUTE_FORCE_PW_ATTEMPT = 1;
    /**
     * Generated from protobuf enum <code>CHAR_NOT_ALLOWED = 2;</code>
     */
    const CHAR_NOT_ALLOWED = 2;
    /**
     * Generated from protobuf enum <code>CONTAINS_BAD_WORDS = 3;</code>
     */
    const CONTAINS_BAD_WORDS = 3;
    /**
     * Generated from protobuf enum <code>INSUFFICIENT_RIGHTS = 4;</code>
     */
    const INSUFFICIENT_RIGHTS = 4;
    /**
     * Generated from protobuf enum <code>INVALID_EMAIL_FORMAT = 5;</code>
     */
    const INVALID_EMAIL_FORMAT = 5;
    /**
     * Generated from protobuf enum <code>INVALID_URL_FORMAT = 6;</code>
     */
    const INVALID_URL_FORMAT = 6;
    /**
     * Generated from protobuf enum <code>INVALID_VALUE = 7;</code>
     */
    const INVALID_VALUE = 7;
    /**
     * Generated from protobuf enum <code>MISSING = 8;</code>
     */
    const MISSING = 8;
    /**
     * Generated from protobuf enum <code>NOT_ALLOWED = 9;</code>
     */
    const NOT_ALLOWED = 9;
    /**
     * Generated from protobuf enum <code>NOT_EVEN = 10;</code>
     */
    const NOT_EVEN = 10;
    /**
     * Generated from protobuf enum <code>NOT_ODD = 11;</code>
     */
    const NOT_ODD = 11;
    /**
     * Generated from protobuf enum <code>NUMBER_FORMAT = 12;</code>
     */
    const NUMBER_FORMAT = 12;
    /**
     * Generated from protobuf enum <code>OUT_OF_RANGE = 13;</code>
     */
    const OUT_OF_RANGE = 13;
    /**
     * Generated from protobuf enum <code>TOO_LOW = 14;</code>
     */
    const TOO_LOW = 14;
    /**
     * Generated from protobuf enum <code>TOO_LOW_AGE = 15;</code>
     */
    const TOO_LOW_AGE = 15;
    /**
     * Generated from protobuf enum <code>TOO_HI = 16;</code>
     */
    const TOO_HI = 16;
    /**
     * Generated from protobuf enum <code>PASSWORDS_DONT_MATCH = 17;</code>
     */
    const PASSWORDS_DONT_MATCH = 17;
    /**
     * Generated from protobuf enum <code>TEMPORARY_INTERNAL_ERROR = 18;</code>
     */
    const TEMPORARY_INTERNAL_ERROR = 18;
    /**
     * Generated from protobuf enum <code>TIMEOUT = 19;</code>
     */
    const TIMEOUT = 19;
    /**
     * Generated from protobuf enum <code>TOO_FEW = 20;</code>
     */
    const TOO_FEW = 20;
    /**
     * Generated from protobuf enum <code>TOO_LONG = 21;</code>
     */
    const TOO_LONG = 21;
    /**
     * Generated from protobuf enum <code>TOO_MANY = 22;</code>
     */
    const TOO_MANY = 22;
    /**
     * Generated from protobuf enum <code>TOO_SHORT = 23;</code>
     */
    const TOO_SHORT = 23;
    /**
     * Generated from protobuf enum <code>WRONG_PASSWORD = 24;</code>
     */
    const WRONG_PASSWORD = 24;
    /**
     * Generated from protobuf enum <code>TEXT_CONTAINED_PASSWORD = 25;</code>
     */
    const TEXT_CONTAINED_PASSWORD = 25;
    /**
     * Generated from protobuf enum <code>SYSTEM_ERROR = 26;</code>
     */
    const SYSTEM_ERROR = 26;
    /**
     * Generated from protobuf enum <code>UNKNOWN = 27;</code>
     */
    const UNKNOWN = 27;
    /**
     * Generated from protobuf enum <code>OTHER = 28;</code>
     */
    const OTHER = 28;
    /**
     * Generated from protobuf enum <code>CHATSERVER_ERROR = 29;</code>
     */
    const CHATSERVER_ERROR = 29;
    /**
     * Generated from protobuf enum <code>RECAPTCHA_ERROR = 30;</code>
     */
    const RECAPTCHA_ERROR = 30;

    private static $valueToName = [
        self::ALREADY_EXISTS => 'ALREADY_EXISTS',
        self::BRUTE_FORCE_PW_ATTEMPT => 'BRUTE_FORCE_PW_ATTEMPT',
        self::CHAR_NOT_ALLOWED => 'CHAR_NOT_ALLOWED',
        self::CONTAINS_BAD_WORDS => 'CONTAINS_BAD_WORDS',
        self::INSUFFICIENT_RIGHTS => 'INSUFFICIENT_RIGHTS',
        self::INVALID_EMAIL_FORMAT => 'INVALID_EMAIL_FORMAT',
        self::INVALID_URL_FORMAT => 'INVALID_URL_FORMAT',
        self::INVALID_VALUE => 'INVALID_VALUE',
        self::MISSING => 'MISSING',
        self::NOT_ALLOWED => 'NOT_ALLOWED',
        self::NOT_EVEN => 'NOT_EVEN',
        self::NOT_ODD => 'NOT_ODD',
        self::NUMBER_FORMAT => 'NUMBER_FORMAT',
        self::OUT_OF_RANGE => 'OUT_OF_RANGE',
        self::TOO_LOW => 'TOO_LOW',
        self::TOO_LOW_AGE => 'TOO_LOW_AGE',
        self::TOO_HI => 'TOO_HI',
        self::PASSWORDS_DONT_MATCH => 'PASSWORDS_DONT_MATCH',
        self::TEMPORARY_INTERNAL_ERROR => 'TEMPORARY_INTERNAL_ERROR',
        self::TIMEOUT => 'TIMEOUT',
        self::TOO_FEW => 'TOO_FEW',
        self::TOO_LONG => 'TOO_LONG',
        self::TOO_MANY => 'TOO_MANY',
        self::TOO_SHORT => 'TOO_SHORT',
        self::WRONG_PASSWORD => 'WRONG_PASSWORD',
        self::TEXT_CONTAINED_PASSWORD => 'TEXT_CONTAINED_PASSWORD',
        self::SYSTEM_ERROR => 'SYSTEM_ERROR',
        self::UNKNOWN => 'UNKNOWN',
        self::OTHER => 'OTHER',
        self::CHATSERVER_ERROR => 'CHATSERVER_ERROR',
        self::RECAPTCHA_ERROR => 'RECAPTCHA_ERROR',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

